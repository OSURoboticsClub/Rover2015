
BasicBrainBoard.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         000003ea  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000000  00802000  000003ea  0000047e  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          00000004  00802000  00802000  0000047e  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  0000047e  2**0
                  CONTENTS, READONLY
  4 .debug_aranges 00000038  00000000  00000000  000004ae  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   00000fc3  00000000  00000000  000004e6  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 000001c4  00000000  00000000  000014a9  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   00000294  00000000  00000000  0000166d  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  0000008c  00000000  00000000  00001904  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    000008fa  00000000  00000000  00001990  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    000000ac  00000000  00000000  0000228a  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000028  00000000  00000000  00002336  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	fd c0       	rjmp	.+506    	; 0x1fc <__ctors_end>
   2:	00 00       	nop
   4:	0d c1       	rjmp	.+538    	; 0x220 <__bad_interrupt>
   6:	00 00       	nop
   8:	0b c1       	rjmp	.+534    	; 0x220 <__bad_interrupt>
   a:	00 00       	nop
   c:	09 c1       	rjmp	.+530    	; 0x220 <__bad_interrupt>
   e:	00 00       	nop
  10:	07 c1       	rjmp	.+526    	; 0x220 <__bad_interrupt>
  12:	00 00       	nop
  14:	05 c1       	rjmp	.+522    	; 0x220 <__bad_interrupt>
  16:	00 00       	nop
  18:	03 c1       	rjmp	.+518    	; 0x220 <__bad_interrupt>
  1a:	00 00       	nop
  1c:	01 c1       	rjmp	.+514    	; 0x220 <__bad_interrupt>
  1e:	00 00       	nop
  20:	ff c0       	rjmp	.+510    	; 0x220 <__bad_interrupt>
  22:	00 00       	nop
  24:	fd c0       	rjmp	.+506    	; 0x220 <__bad_interrupt>
  26:	00 00       	nop
  28:	fb c0       	rjmp	.+502    	; 0x220 <__bad_interrupt>
  2a:	00 00       	nop
  2c:	f9 c0       	rjmp	.+498    	; 0x220 <__bad_interrupt>
  2e:	00 00       	nop
  30:	f7 c0       	rjmp	.+494    	; 0x220 <__bad_interrupt>
  32:	00 00       	nop
  34:	f5 c0       	rjmp	.+490    	; 0x220 <__bad_interrupt>
  36:	00 00       	nop
  38:	0c c1       	rjmp	.+536    	; 0x252 <__vector_14>
  3a:	00 00       	nop
  3c:	f1 c0       	rjmp	.+482    	; 0x220 <__bad_interrupt>
  3e:	00 00       	nop
  40:	ef c0       	rjmp	.+478    	; 0x220 <__bad_interrupt>
  42:	00 00       	nop
  44:	ed c0       	rjmp	.+474    	; 0x220 <__bad_interrupt>
  46:	00 00       	nop
  48:	eb c0       	rjmp	.+470    	; 0x220 <__bad_interrupt>
  4a:	00 00       	nop
  4c:	e9 c0       	rjmp	.+466    	; 0x220 <__bad_interrupt>
  4e:	00 00       	nop
  50:	e8 c0       	rjmp	.+464    	; 0x222 <__vector_20>
  52:	00 00       	nop
  54:	e5 c0       	rjmp	.+458    	; 0x220 <__bad_interrupt>
  56:	00 00       	nop
  58:	e3 c0       	rjmp	.+454    	; 0x220 <__bad_interrupt>
  5a:	00 00       	nop
  5c:	e1 c0       	rjmp	.+450    	; 0x220 <__bad_interrupt>
  5e:	00 00       	nop
  60:	df c0       	rjmp	.+446    	; 0x220 <__bad_interrupt>
  62:	00 00       	nop
  64:	dd c0       	rjmp	.+442    	; 0x220 <__bad_interrupt>
  66:	00 00       	nop
  68:	db c0       	rjmp	.+438    	; 0x220 <__bad_interrupt>
  6a:	00 00       	nop
  6c:	d9 c0       	rjmp	.+434    	; 0x220 <__bad_interrupt>
  6e:	00 00       	nop
  70:	d7 c0       	rjmp	.+430    	; 0x220 <__bad_interrupt>
  72:	00 00       	nop
  74:	d5 c0       	rjmp	.+426    	; 0x220 <__bad_interrupt>
  76:	00 00       	nop
  78:	d3 c0       	rjmp	.+422    	; 0x220 <__bad_interrupt>
  7a:	00 00       	nop
  7c:	d1 c0       	rjmp	.+418    	; 0x220 <__bad_interrupt>
  7e:	00 00       	nop
  80:	cf c0       	rjmp	.+414    	; 0x220 <__bad_interrupt>
  82:	00 00       	nop
  84:	cd c0       	rjmp	.+410    	; 0x220 <__bad_interrupt>
  86:	00 00       	nop
  88:	cb c0       	rjmp	.+406    	; 0x220 <__bad_interrupt>
  8a:	00 00       	nop
  8c:	c9 c0       	rjmp	.+402    	; 0x220 <__bad_interrupt>
  8e:	00 00       	nop
  90:	c7 c0       	rjmp	.+398    	; 0x220 <__bad_interrupt>
  92:	00 00       	nop
  94:	c5 c0       	rjmp	.+394    	; 0x220 <__bad_interrupt>
  96:	00 00       	nop
  98:	c3 c0       	rjmp	.+390    	; 0x220 <__bad_interrupt>
  9a:	00 00       	nop
  9c:	c1 c0       	rjmp	.+386    	; 0x220 <__bad_interrupt>
  9e:	00 00       	nop
  a0:	bf c0       	rjmp	.+382    	; 0x220 <__bad_interrupt>
  a2:	00 00       	nop
  a4:	bd c0       	rjmp	.+378    	; 0x220 <__bad_interrupt>
  a6:	00 00       	nop
  a8:	bb c0       	rjmp	.+374    	; 0x220 <__bad_interrupt>
  aa:	00 00       	nop
  ac:	b9 c0       	rjmp	.+370    	; 0x220 <__bad_interrupt>
  ae:	00 00       	nop
  b0:	b7 c0       	rjmp	.+366    	; 0x220 <__bad_interrupt>
  b2:	00 00       	nop
  b4:	b5 c0       	rjmp	.+362    	; 0x220 <__bad_interrupt>
  b6:	00 00       	nop
  b8:	b3 c0       	rjmp	.+358    	; 0x220 <__bad_interrupt>
  ba:	00 00       	nop
  bc:	b1 c0       	rjmp	.+354    	; 0x220 <__bad_interrupt>
  be:	00 00       	nop
  c0:	af c0       	rjmp	.+350    	; 0x220 <__bad_interrupt>
  c2:	00 00       	nop
  c4:	ad c0       	rjmp	.+346    	; 0x220 <__bad_interrupt>
  c6:	00 00       	nop
  c8:	ab c0       	rjmp	.+342    	; 0x220 <__bad_interrupt>
  ca:	00 00       	nop
  cc:	a9 c0       	rjmp	.+338    	; 0x220 <__bad_interrupt>
  ce:	00 00       	nop
  d0:	a7 c0       	rjmp	.+334    	; 0x220 <__bad_interrupt>
  d2:	00 00       	nop
  d4:	a5 c0       	rjmp	.+330    	; 0x220 <__bad_interrupt>
  d6:	00 00       	nop
  d8:	a3 c0       	rjmp	.+326    	; 0x220 <__bad_interrupt>
  da:	00 00       	nop
  dc:	a1 c0       	rjmp	.+322    	; 0x220 <__bad_interrupt>
  de:	00 00       	nop
  e0:	9f c0       	rjmp	.+318    	; 0x220 <__bad_interrupt>
  e2:	00 00       	nop
  e4:	9d c0       	rjmp	.+314    	; 0x220 <__bad_interrupt>
  e6:	00 00       	nop
  e8:	9b c0       	rjmp	.+310    	; 0x220 <__bad_interrupt>
  ea:	00 00       	nop
  ec:	99 c0       	rjmp	.+306    	; 0x220 <__bad_interrupt>
  ee:	00 00       	nop
  f0:	97 c0       	rjmp	.+302    	; 0x220 <__bad_interrupt>
  f2:	00 00       	nop
  f4:	95 c0       	rjmp	.+298    	; 0x220 <__bad_interrupt>
  f6:	00 00       	nop
  f8:	93 c0       	rjmp	.+294    	; 0x220 <__bad_interrupt>
  fa:	00 00       	nop
  fc:	91 c0       	rjmp	.+290    	; 0x220 <__bad_interrupt>
  fe:	00 00       	nop
 100:	8f c0       	rjmp	.+286    	; 0x220 <__bad_interrupt>
 102:	00 00       	nop
 104:	8d c0       	rjmp	.+282    	; 0x220 <__bad_interrupt>
 106:	00 00       	nop
 108:	8b c0       	rjmp	.+278    	; 0x220 <__bad_interrupt>
 10a:	00 00       	nop
 10c:	89 c0       	rjmp	.+274    	; 0x220 <__bad_interrupt>
 10e:	00 00       	nop
 110:	87 c0       	rjmp	.+270    	; 0x220 <__bad_interrupt>
 112:	00 00       	nop
 114:	85 c0       	rjmp	.+266    	; 0x220 <__bad_interrupt>
 116:	00 00       	nop
 118:	83 c0       	rjmp	.+262    	; 0x220 <__bad_interrupt>
 11a:	00 00       	nop
 11c:	81 c0       	rjmp	.+258    	; 0x220 <__bad_interrupt>
 11e:	00 00       	nop
 120:	7f c0       	rjmp	.+254    	; 0x220 <__bad_interrupt>
 122:	00 00       	nop
 124:	7d c0       	rjmp	.+250    	; 0x220 <__bad_interrupt>
 126:	00 00       	nop
 128:	7b c0       	rjmp	.+246    	; 0x220 <__bad_interrupt>
 12a:	00 00       	nop
 12c:	79 c0       	rjmp	.+242    	; 0x220 <__bad_interrupt>
 12e:	00 00       	nop
 130:	77 c0       	rjmp	.+238    	; 0x220 <__bad_interrupt>
 132:	00 00       	nop
 134:	75 c0       	rjmp	.+234    	; 0x220 <__bad_interrupt>
 136:	00 00       	nop
 138:	73 c0       	rjmp	.+230    	; 0x220 <__bad_interrupt>
 13a:	00 00       	nop
 13c:	71 c0       	rjmp	.+226    	; 0x220 <__bad_interrupt>
 13e:	00 00       	nop
 140:	6f c0       	rjmp	.+222    	; 0x220 <__bad_interrupt>
 142:	00 00       	nop
 144:	6d c0       	rjmp	.+218    	; 0x220 <__bad_interrupt>
 146:	00 00       	nop
 148:	6b c0       	rjmp	.+214    	; 0x220 <__bad_interrupt>
 14a:	00 00       	nop
 14c:	69 c0       	rjmp	.+210    	; 0x220 <__bad_interrupt>
 14e:	00 00       	nop
 150:	67 c0       	rjmp	.+206    	; 0x220 <__bad_interrupt>
 152:	00 00       	nop
 154:	65 c0       	rjmp	.+202    	; 0x220 <__bad_interrupt>
 156:	00 00       	nop
 158:	63 c0       	rjmp	.+198    	; 0x220 <__bad_interrupt>
 15a:	00 00       	nop
 15c:	61 c0       	rjmp	.+194    	; 0x220 <__bad_interrupt>
 15e:	00 00       	nop
 160:	5f c0       	rjmp	.+190    	; 0x220 <__bad_interrupt>
 162:	00 00       	nop
 164:	5d c0       	rjmp	.+186    	; 0x220 <__bad_interrupt>
 166:	00 00       	nop
 168:	5b c0       	rjmp	.+182    	; 0x220 <__bad_interrupt>
 16a:	00 00       	nop
 16c:	59 c0       	rjmp	.+178    	; 0x220 <__bad_interrupt>
 16e:	00 00       	nop
 170:	57 c0       	rjmp	.+174    	; 0x220 <__bad_interrupt>
 172:	00 00       	nop
 174:	55 c0       	rjmp	.+170    	; 0x220 <__bad_interrupt>
 176:	00 00       	nop
 178:	53 c0       	rjmp	.+166    	; 0x220 <__bad_interrupt>
 17a:	00 00       	nop
 17c:	51 c0       	rjmp	.+162    	; 0x220 <__bad_interrupt>
 17e:	00 00       	nop
 180:	4f c0       	rjmp	.+158    	; 0x220 <__bad_interrupt>
 182:	00 00       	nop
 184:	4d c0       	rjmp	.+154    	; 0x220 <__bad_interrupt>
 186:	00 00       	nop
 188:	4b c0       	rjmp	.+150    	; 0x220 <__bad_interrupt>
 18a:	00 00       	nop
 18c:	49 c0       	rjmp	.+146    	; 0x220 <__bad_interrupt>
 18e:	00 00       	nop
 190:	47 c0       	rjmp	.+142    	; 0x220 <__bad_interrupt>
 192:	00 00       	nop
 194:	45 c0       	rjmp	.+138    	; 0x220 <__bad_interrupt>
 196:	00 00       	nop
 198:	43 c0       	rjmp	.+134    	; 0x220 <__bad_interrupt>
 19a:	00 00       	nop
 19c:	41 c0       	rjmp	.+130    	; 0x220 <__bad_interrupt>
 19e:	00 00       	nop
 1a0:	3f c0       	rjmp	.+126    	; 0x220 <__bad_interrupt>
 1a2:	00 00       	nop
 1a4:	3d c0       	rjmp	.+122    	; 0x220 <__bad_interrupt>
 1a6:	00 00       	nop
 1a8:	3b c0       	rjmp	.+118    	; 0x220 <__bad_interrupt>
 1aa:	00 00       	nop
 1ac:	39 c0       	rjmp	.+114    	; 0x220 <__bad_interrupt>
 1ae:	00 00       	nop
 1b0:	37 c0       	rjmp	.+110    	; 0x220 <__bad_interrupt>
 1b2:	00 00       	nop
 1b4:	35 c0       	rjmp	.+106    	; 0x220 <__bad_interrupt>
 1b6:	00 00       	nop
 1b8:	33 c0       	rjmp	.+102    	; 0x220 <__bad_interrupt>
 1ba:	00 00       	nop
 1bc:	31 c0       	rjmp	.+98     	; 0x220 <__bad_interrupt>
 1be:	00 00       	nop
 1c0:	2f c0       	rjmp	.+94     	; 0x220 <__bad_interrupt>
 1c2:	00 00       	nop
 1c4:	2d c0       	rjmp	.+90     	; 0x220 <__bad_interrupt>
 1c6:	00 00       	nop
 1c8:	2b c0       	rjmp	.+86     	; 0x220 <__bad_interrupt>
 1ca:	00 00       	nop
 1cc:	29 c0       	rjmp	.+82     	; 0x220 <__bad_interrupt>
 1ce:	00 00       	nop
 1d0:	27 c0       	rjmp	.+78     	; 0x220 <__bad_interrupt>
 1d2:	00 00       	nop
 1d4:	25 c0       	rjmp	.+74     	; 0x220 <__bad_interrupt>
 1d6:	00 00       	nop
 1d8:	23 c0       	rjmp	.+70     	; 0x220 <__bad_interrupt>
 1da:	00 00       	nop
 1dc:	21 c0       	rjmp	.+66     	; 0x220 <__bad_interrupt>
 1de:	00 00       	nop
 1e0:	1f c0       	rjmp	.+62     	; 0x220 <__bad_interrupt>
 1e2:	00 00       	nop
 1e4:	1d c0       	rjmp	.+58     	; 0x220 <__bad_interrupt>
 1e6:	00 00       	nop
 1e8:	1b c0       	rjmp	.+54     	; 0x220 <__bad_interrupt>
 1ea:	00 00       	nop
 1ec:	19 c0       	rjmp	.+50     	; 0x220 <__bad_interrupt>
 1ee:	00 00       	nop
 1f0:	17 c0       	rjmp	.+46     	; 0x220 <__bad_interrupt>
 1f2:	00 00       	nop
 1f4:	15 c0       	rjmp	.+42     	; 0x220 <__bad_interrupt>
 1f6:	00 00       	nop
 1f8:	13 c0       	rjmp	.+38     	; 0x220 <__bad_interrupt>
	...

000001fc <__ctors_end>:
 1fc:	11 24       	eor	r1, r1
 1fe:	1f be       	out	0x3f, r1	; 63
 200:	cf ef       	ldi	r28, 0xFF	; 255
 202:	cd bf       	out	0x3d, r28	; 61
 204:	df e3       	ldi	r29, 0x3F	; 63
 206:	de bf       	out	0x3e, r29	; 62
 208:	00 e0       	ldi	r16, 0x00	; 0
 20a:	0c bf       	out	0x3c, r16	; 60

0000020c <__do_clear_bss>:
 20c:	20 e2       	ldi	r18, 0x20	; 32
 20e:	a0 e0       	ldi	r26, 0x00	; 0
 210:	b0 e2       	ldi	r27, 0x20	; 32
 212:	01 c0       	rjmp	.+2      	; 0x216 <.do_clear_bss_start>

00000214 <.do_clear_bss_loop>:
 214:	1d 92       	st	X+, r1

00000216 <.do_clear_bss_start>:
 216:	a4 30       	cpi	r26, 0x04	; 4
 218:	b2 07       	cpc	r27, r18
 21a:	e1 f7       	brne	.-8      	; 0x214 <.do_clear_bss_loop>
 21c:	56 d0       	rcall	.+172    	; 0x2ca <main>
 21e:	e3 c0       	rjmp	.+454    	; 0x3e6 <_exit>

00000220 <__bad_interrupt>:
 220:	ef ce       	rjmp	.-546    	; 0x0 <__vectors>

00000222 <__vector_20>:
#define RGB_GREEN_SET(void) (PORTC.OUTSET = PIN4_bm)
#define RGB_GREEN_CLR(void) (PORTC.OUTCLR = PIN4_bm)


void timer_init(void);
ISR(TCC1_OVF_vect){
 222:	1f 92       	push	r1
 224:	0f 92       	push	r0
 226:	0f b6       	in	r0, 0x3f	; 63
 228:	0f 92       	push	r0
 22a:	11 24       	eor	r1, r1
 22c:	0b b6       	in	r0, 0x3b	; 59
 22e:	0f 92       	push	r0
 230:	8f 93       	push	r24
 232:	ef 93       	push	r30
 234:	ff 93       	push	r31
	TCC1.INTFLAGS = TC1_OVFIF_bm;
 236:	81 e0       	ldi	r24, 0x01	; 1
 238:	e0 e4       	ldi	r30, 0x40	; 64
 23a:	f8 e0       	ldi	r31, 0x08	; 8
 23c:	84 87       	std	Z+12, r24	; 0x0c
}
 23e:	ff 91       	pop	r31
 240:	ef 91       	pop	r30
 242:	8f 91       	pop	r24
 244:	0f 90       	pop	r0
 246:	0b be       	out	0x3b, r0	; 59
 248:	0f 90       	pop	r0
 24a:	0f be       	out	0x3f, r0	; 63
 24c:	0f 90       	pop	r0
 24e:	1f 90       	pop	r1
 250:	18 95       	reti

00000252 <__vector_14>:

ISR(TCC0_OVF_vect){
 252:	1f 92       	push	r1
 254:	0f 92       	push	r0
 256:	0f b6       	in	r0, 0x3f	; 63
 258:	0f 92       	push	r0
 25a:	11 24       	eor	r1, r1
 25c:	0b b6       	in	r0, 0x3b	; 59
 25e:	0f 92       	push	r0
 260:	8f 93       	push	r24
 262:	ef 93       	push	r30
 264:	ff 93       	push	r31
	TCC0.INTFLAGS = TC0_OVFIF_bm;
 266:	81 e0       	ldi	r24, 0x01	; 1
 268:	e0 e0       	ldi	r30, 0x00	; 0
 26a:	f8 e0       	ldi	r31, 0x08	; 8
 26c:	84 87       	std	Z+12, r24	; 0x0c
}
 26e:	ff 91       	pop	r31
 270:	ef 91       	pop	r30
 272:	8f 91       	pop	r24
 274:	0f 90       	pop	r0
 276:	0b be       	out	0x3b, r0	; 59
 278:	0f 90       	pop	r0
 27a:	0f be       	out	0x3f, r0	; 63
 27c:	0f 90       	pop	r0
 27e:	1f 90       	pop	r1
 280:	18 95       	reti

00000282 <_Z10timer_initv>:
	*/
    }
}

void timer_init(void){
	TCC0.PER = 100;	//period for PWM
 282:	e0 e0       	ldi	r30, 0x00	; 0
 284:	f8 e0       	ldi	r31, 0x08	; 8
 286:	24 e6       	ldi	r18, 0x64	; 100
 288:	30 e0       	ldi	r19, 0x00	; 0
 28a:	26 a3       	std	Z+38, r18	; 0x26
 28c:	37 a3       	std	Z+39, r19	; 0x27
	TCC0.CTRLA = TC_CLKSEL_DIV256_gc; //sets the PWM base frequency by 2000000/256
 28e:	66 e0       	ldi	r22, 0x06	; 6
 290:	60 83       	st	Z, r22
	TCC0.CTRLB = TC_WGMODE_SINGLESLOPE_gc; //sets the wave generation mode to single slope
 292:	53 e0       	ldi	r21, 0x03	; 3
 294:	51 83       	std	Z+1, r21	; 0x01
	TCC0.CTRLB |= (0b00110000); //
 296:	81 81       	ldd	r24, Z+1	; 0x01
 298:	80 63       	ori	r24, 0x30	; 48
 29a:	81 83       	std	Z+1, r24	; 0x01
	TCC0.INTCTRLA = TC_OVFINTLVL_LO_gc; //interrupt register
 29c:	41 e0       	ldi	r20, 0x01	; 1
 29e:	46 83       	std	Z+6, r20	; 0x06
	TCC0.CCB = 10; 
 2a0:	8a e0       	ldi	r24, 0x0A	; 10
 2a2:	90 e0       	ldi	r25, 0x00	; 0
 2a4:	82 a7       	std	Z+42, r24	; 0x2a
 2a6:	93 a7       	std	Z+43, r25	; 0x2b
	TCC0.CCA = 50;
 2a8:	82 e3       	ldi	r24, 0x32	; 50
 2aa:	90 e0       	ldi	r25, 0x00	; 0
 2ac:	80 a7       	std	Z+40, r24	; 0x28
 2ae:	91 a7       	std	Z+41, r25	; 0x29
	
	TCC1.PER = 100;
 2b0:	e0 e4       	ldi	r30, 0x40	; 64
 2b2:	f8 e0       	ldi	r31, 0x08	; 8
 2b4:	26 a3       	std	Z+38, r18	; 0x26
 2b6:	37 a3       	std	Z+39, r19	; 0x27
	TCC1.CTRLA = TC_CLKSEL_DIV256_gc;
 2b8:	60 83       	st	Z, r22
	TCC1.CTRLB = TC_WGMODE_SINGLESLOPE_gc;
 2ba:	51 83       	std	Z+1, r21	; 0x01
	TCC1.CTRLB |= (0b00010000);
 2bc:	21 81       	ldd	r18, Z+1	; 0x01
 2be:	20 61       	ori	r18, 0x10	; 16
 2c0:	21 83       	std	Z+1, r18	; 0x01
	TCC1.INTCTRLA = TC_OVFINTLVL_LO_gc;
 2c2:	46 83       	std	Z+6, r20	; 0x06
	TCC1.CCA = 50;
 2c4:	80 a7       	std	Z+40, r24	; 0x28
 2c6:	91 a7       	std	Z+41, r25	; 0x29
 2c8:	08 95       	ret

000002ca <main>:
}

int main(void)
{
	//Initialization Code
	PORTC.DIRSET = (PIN5_bm | PIN6_bm | PIN7_bm); //Sets status/error led outputs
 2ca:	e0 e4       	ldi	r30, 0x40	; 64
 2cc:	f6 e0       	ldi	r31, 0x06	; 6
 2ce:	80 ee       	ldi	r24, 0xE0	; 224
 2d0:	81 83       	std	Z+1, r24	; 0x01
	PORTC.DIRSET = (PIN0_bm | PIN1_bm | PIN4_bm); //Set RGB Led outputs
 2d2:	83 e1       	ldi	r24, 0x13	; 19
 2d4:	81 83       	std	Z+1, r24	; 0x01
	//PORTC.DIRCLR = PIN0_bm;
	timer_init();
 2d6:	d5 df       	rcall	.-86     	; 0x282 <_Z10timer_initv>
	PMIC.CTRL |= PMIC_LOLVLEN_bm; //draws current for ?
 2d8:	e0 ea       	ldi	r30, 0xA0	; 160
 2da:	f0 e0       	ldi	r31, 0x00	; 0
 2dc:	82 81       	ldd	r24, Z+2	; 0x02
 2de:	81 60       	ori	r24, 0x01	; 1
 2e0:	82 83       	std	Z+2, r24	; 0x02
    { 
		static long i = 0;
		i++;
		
		/***Setting color phase difference about a third***/
		TCC0.CCA = i % 75; 
 2e2:	0f 2e       	mov	r0, r31
 2e4:	fb e4       	ldi	r31, 0x4B	; 75
 2e6:	8f 2e       	mov	r8, r31
 2e8:	91 2c       	mov	r9, r1
 2ea:	a1 2c       	mov	r10, r1
 2ec:	b1 2c       	mov	r11, r1
 2ee:	f0 2d       	mov	r31, r0
 2f0:	c0 e0       	ldi	r28, 0x00	; 0
 2f2:	d8 e0       	ldi	r29, 0x08	; 8
		TCC0.CCB = (i + 33) % 75; 
		TCC1.CCA = (i + 66) % 75; 
 2f4:	00 e4       	ldi	r16, 0x40	; 64
 2f6:	18 e0       	ldi	r17, 0x08	; 8
	timer_init();
	PMIC.CTRL |= PMIC_LOLVLEN_bm; //draws current for ?
    while(1)
    { 
		static long i = 0;
		i++;
 2f8:	c0 90 00 20 	lds	r12, 0x2000
 2fc:	d0 90 01 20 	lds	r13, 0x2001
 300:	e0 90 02 20 	lds	r14, 0x2002
 304:	f0 90 03 20 	lds	r15, 0x2003
 308:	c7 01       	movw	r24, r14
 30a:	b6 01       	movw	r22, r12
 30c:	6f 5f       	subi	r22, 0xFF	; 255
 30e:	7f 4f       	sbci	r23, 0xFF	; 255
 310:	8f 4f       	sbci	r24, 0xFF	; 255
 312:	9f 4f       	sbci	r25, 0xFF	; 255
 314:	60 93 00 20 	sts	0x2000, r22
 318:	70 93 01 20 	sts	0x2001, r23
 31c:	80 93 02 20 	sts	0x2002, r24
 320:	90 93 03 20 	sts	0x2003, r25
		
		/***Setting color phase difference about a third***/
		TCC0.CCA = i % 75; 
 324:	a5 01       	movw	r20, r10
 326:	94 01       	movw	r18, r8
 328:	20 d0       	rcall	.+64     	; 0x36a <__divmodsi4>
 32a:	68 a7       	std	Y+40, r22	; 0x28
 32c:	79 a7       	std	Y+41, r23	; 0x29
		TCC0.CCB = (i + 33) % 75; 
 32e:	c7 01       	movw	r24, r14
 330:	b6 01       	movw	r22, r12
 332:	6e 5d       	subi	r22, 0xDE	; 222
 334:	7f 4f       	sbci	r23, 0xFF	; 255
 336:	8f 4f       	sbci	r24, 0xFF	; 255
 338:	9f 4f       	sbci	r25, 0xFF	; 255
 33a:	a5 01       	movw	r20, r10
 33c:	94 01       	movw	r18, r8
 33e:	15 d0       	rcall	.+42     	; 0x36a <__divmodsi4>
 340:	6a a7       	std	Y+42, r22	; 0x2a
 342:	7b a7       	std	Y+43, r23	; 0x2b
		TCC1.CCA = (i + 66) % 75; 
 344:	c7 01       	movw	r24, r14
 346:	b6 01       	movw	r22, r12
 348:	6d 5b       	subi	r22, 0xBD	; 189
 34a:	7f 4f       	sbci	r23, 0xFF	; 255
 34c:	8f 4f       	sbci	r24, 0xFF	; 255
 34e:	9f 4f       	sbci	r25, 0xFF	; 255
 350:	a5 01       	movw	r20, r10
 352:	94 01       	movw	r18, r8
 354:	0a d0       	rcall	.+20     	; 0x36a <__divmodsi4>
 356:	f8 01       	movw	r30, r16
 358:	60 a7       	std	Z+40, r22	; 0x28
 35a:	71 a7       	std	Z+41, r23	; 0x29
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 35c:	83 ed       	ldi	r24, 0xD3	; 211
 35e:	90 e3       	ldi	r25, 0x30	; 48
 360:	01 97       	sbiw	r24, 0x01	; 1
 362:	f1 f7       	brne	.-4      	; 0x360 <main+0x96>
 364:	00 c0       	rjmp	.+0      	; 0x366 <main+0x9c>
 366:	00 00       	nop
 368:	c7 cf       	rjmp	.-114    	; 0x2f8 <main+0x2e>

0000036a <__divmodsi4>:
 36a:	05 2e       	mov	r0, r21
 36c:	97 fb       	bst	r25, 7
 36e:	16 f4       	brtc	.+4      	; 0x374 <__divmodsi4+0xa>
 370:	00 94       	com	r0
 372:	0f d0       	rcall	.+30     	; 0x392 <__negsi2>
 374:	57 fd       	sbrc	r21, 7
 376:	05 d0       	rcall	.+10     	; 0x382 <__divmodsi4_neg2>
 378:	14 d0       	rcall	.+40     	; 0x3a2 <__udivmodsi4>
 37a:	07 fc       	sbrc	r0, 7
 37c:	02 d0       	rcall	.+4      	; 0x382 <__divmodsi4_neg2>
 37e:	46 f4       	brtc	.+16     	; 0x390 <__divmodsi4_exit>
 380:	08 c0       	rjmp	.+16     	; 0x392 <__negsi2>

00000382 <__divmodsi4_neg2>:
 382:	50 95       	com	r21
 384:	40 95       	com	r20
 386:	30 95       	com	r19
 388:	21 95       	neg	r18
 38a:	3f 4f       	sbci	r19, 0xFF	; 255
 38c:	4f 4f       	sbci	r20, 0xFF	; 255
 38e:	5f 4f       	sbci	r21, 0xFF	; 255

00000390 <__divmodsi4_exit>:
 390:	08 95       	ret

00000392 <__negsi2>:
 392:	90 95       	com	r25
 394:	80 95       	com	r24
 396:	70 95       	com	r23
 398:	61 95       	neg	r22
 39a:	7f 4f       	sbci	r23, 0xFF	; 255
 39c:	8f 4f       	sbci	r24, 0xFF	; 255
 39e:	9f 4f       	sbci	r25, 0xFF	; 255
 3a0:	08 95       	ret

000003a2 <__udivmodsi4>:
 3a2:	a1 e2       	ldi	r26, 0x21	; 33
 3a4:	1a 2e       	mov	r1, r26
 3a6:	aa 1b       	sub	r26, r26
 3a8:	bb 1b       	sub	r27, r27
 3aa:	fd 01       	movw	r30, r26
 3ac:	0d c0       	rjmp	.+26     	; 0x3c8 <__udivmodsi4_ep>

000003ae <__udivmodsi4_loop>:
 3ae:	aa 1f       	adc	r26, r26
 3b0:	bb 1f       	adc	r27, r27
 3b2:	ee 1f       	adc	r30, r30
 3b4:	ff 1f       	adc	r31, r31
 3b6:	a2 17       	cp	r26, r18
 3b8:	b3 07       	cpc	r27, r19
 3ba:	e4 07       	cpc	r30, r20
 3bc:	f5 07       	cpc	r31, r21
 3be:	20 f0       	brcs	.+8      	; 0x3c8 <__udivmodsi4_ep>
 3c0:	a2 1b       	sub	r26, r18
 3c2:	b3 0b       	sbc	r27, r19
 3c4:	e4 0b       	sbc	r30, r20
 3c6:	f5 0b       	sbc	r31, r21

000003c8 <__udivmodsi4_ep>:
 3c8:	66 1f       	adc	r22, r22
 3ca:	77 1f       	adc	r23, r23
 3cc:	88 1f       	adc	r24, r24
 3ce:	99 1f       	adc	r25, r25
 3d0:	1a 94       	dec	r1
 3d2:	69 f7       	brne	.-38     	; 0x3ae <__udivmodsi4_loop>
 3d4:	60 95       	com	r22
 3d6:	70 95       	com	r23
 3d8:	80 95       	com	r24
 3da:	90 95       	com	r25
 3dc:	9b 01       	movw	r18, r22
 3de:	ac 01       	movw	r20, r24
 3e0:	bd 01       	movw	r22, r26
 3e2:	cf 01       	movw	r24, r30
 3e4:	08 95       	ret

000003e6 <_exit>:
 3e6:	f8 94       	cli

000003e8 <__stop_program>:
 3e8:	ff cf       	rjmp	.-2      	; 0x3e8 <__stop_program>
